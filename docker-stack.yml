version: "3.7"

services:
  prometheus:
    image: prom/prometheus:v2.17.0
    volumes:
      - /shared/repos/monitoring/prometheus/config:/etc/prometheus # <--- change it
      - /shared/repos/monitoring/prometheus/data:/prometheus # <--- change it
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
    networks:
      - monitoring
    deploy:
      placement:
        constraints:
          - node.role==manager
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.prometheus.rule=Host(`prometheus.example.com`)" # <--- change it
        - "traefik.http.routers.prometheus.entrypoints=https"
        - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
        - "traefik.docker.lbswarm=true"
        - "traefik.docker.network=traefik"
      restart_policy:
        condition: on-failure

  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.sysfs=/host/sys"
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    networks:
      - monitoring
    deploy:
      mode: global
      placement:
        constraints:
          - node.role==manager
      restart_policy:
        condition: on-failure

  alertmanager:
    image: prom/alertmanager
    #ports:
      #- 9093:9093
    volumes:
      - "/shared/repos/monitoring/alertmanager/config/:/etc/alertmanager/"
    command:
      - "--config.file=/etc/alertmanager/config.yml"
      - "--storage.path=/alertmanager"
    networks:
      - monitoring
    deploy:
      placement:
        constraints:
          - node.role==manager
      restart_policy:
        condition: on-failure

  cadvisor:
    image: google/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8088:8080
    networks:
      - monitoring
    deploy:
      mode: global
      placement:
        constraints:
          - node.role==manager
      restart_policy:
        condition: on-failure

  grafana:
    image: grafana/grafana:6.7.1
    depends_on:
      - prometheus
    volumes:
      - /shared/repos/monitoring/grafana/data:/var/lib/grafana
      - /shared/repos/monitoring/grafana/config:/etc/grafana/provisioning/
    env_file:
      - /shared/repos/monitoring/grafana/config/config.monitoring
    user: "104"
    networks:
      - monitoring
    ports:
      - 3000:3000
    deploy:
      placement:
        constraints:
          - node.role==manager
      restart_policy:
        condition: on-failure

networks:
  monitoring:
    driver: overlay
  traefik:
    external: true
    name: "traefik" # <-- change it
